#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//冒泡排序与回调函数与比较函数结合
//自定义一个比较函数
void Swap(char * buf1, char *buf2, int width)
{
    int i = 0;
    for(i = 0; i < width; i++)
    {
        char tmp = *buf1;
        *buf1 = *buf2;
        *buf2 = tmp;
        buf1++;
        buf2++;
    }
}

void bubble_sort(void*base, int sz, int width, int (*cmp)(const void*e1,const void*e2))
{

    int i = 0;
    //趟数
    for(i=0; i<sz-1; i++)
    {
        //每一趟比较的对数
        int j=0;
        for(j=0; j<sz-1-i; j++)
        {
            //两个元素的比较
            if(cmp((char*)base+j*width,(char*)base+(j+1)*width)>0)
            {
                //交换
                Swap((char*)base+j*width,(char*)base+(j+1)*width,width);
            }
        }
    }
}

struct stu
{
    char name[20];
    int age;
};

int cmp_stu(const void*e1, const void*e2)
{
    //比较字符串不能直接用><=比较，要用strcmp函数
    return strcmp(((struct stu*)e1)->name , ((struct stu*)e2)->name);
}
void test()
{
    struct stu s[3]={{ "zhangsan",20},{"lisi",10},{"wangwu",30}};
    int sz = sizeof(s)/sizeof(s[0]);
    bubble_sort(s,sz,sizeof(s[0]),cmp_stu);
}
int cmp_int(const void* e1,const void*e2)
{
    return *(int*)e1 - *(int*)e2;
}
void test1()
{
    int arr[10] = {9,8,7,6,5,4,3,2,1,0};
    int sz = sizeof(arr)/sizeof(arr[0]);
    bubble_sort(arr,sz,sizeof(arr[0]),cmp_int);
    int i =0;
    for(i=0; i<sz; i++)
    {
        printf("%d ",arr[i]);
    }
}
int main()
{
    test();
    test1();
    return 0;
}
